class Solution {
    public static int recur(int i , int j , int[][] grid , int[][] dp){
        if(i < 0 || j < 0 || grid[i][j] == 1)
            return 0;
            
        if(i==0 && j==0)
            return 1;

        if(dp[i][j] != -1)
          return dp[i][j];

        int up = recur(i - 1 , j , grid , dp);
        int down = recur(i , j - 1 , grid , dp);

        return dp[i][j] = up + down;
        
    }
    public int uniquePathsWithObstacles(int[][] grid) {
        int m=grid.length;
        int n=grid[0].length;
        int dp[][] = new int[m][n];
        for(int[] arr : dp)
            Arrays.fill(arr , -1);
        return recur(m - 1 , n - 1 , grid , dp);
    }
}
